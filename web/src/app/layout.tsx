import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { QueryProvider } from "@/providers/QueryProvider";
import { AuthProvider } from "@/providers/AuthProvider";
import { AuthErrorBoundary } from "@/components/AuthErrorBoundary";
import { GlobalErrorBoundary } from "@/components/GlobalErrorBoundary";
import { SessionTracker } from "@/components/SessionTracker";
import { OfflineIndicator } from "@/components/OfflineIndicator";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <GlobalErrorBoundary enableErrorLogging={true}>
          <AuthProvider>
            <QueryProvider>
              <AuthErrorBoundary>
                <SessionTracker>
                  <OfflineIndicator variant="banner" className="mb-4" />
                  {children}
                </SessionTracker>
              </AuthErrorBoundary>
            </QueryProvider>
          </AuthProvider>
        </GlobalErrorBoundary>
      </body>
    </html>
  );
}
